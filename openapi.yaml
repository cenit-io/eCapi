openapi: 3.0.0
info:
  version: v1
  title: eCapi
  termsOfService: 'https://example.com/terms/'
  contact:
    email: support@cenit.io
    url: 'https://cenitio.slack.com/messages/support'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: 'https://cenit.io/assets/cenit-logo-c4e099552f7dc77c1870b7c77600380177da8b01c0a4a70dbf608b73e61da3ce.png'
  description: |
    # Introduction
    * The eCommerce's API is built over REST services on HTTPS.
    * It has predictable resource URLs.
    * It returns HTTP response codes to indicate errors.
    * It also accepts and returns JSON in the HTTP body.
    * You can use your favorite HTTP/REST library for your programming language to use eCommerce's API,
    # Authentication
    TODO: ...
tags:
  - name: Store
    description: Operations about store
  - name: Order
    description: Operations about orders
  - name: Task
    description: Operations about tasks
servers:
  - url: 'https://cenit.io/app/ecapi'
paths:
  /orders:
    get:
      tags:
        - Order
      operationId: getOrders
      summary: Get orders
      description: |
        Returns the list of orders settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
              example:
                $ref: '#/components/examples/orders_response'
  '/orders/{id}':
    get:
      tags:
        - Order
      operationId: getOrderSettings
      summary: Get order
      description: |
        Find order settings by given id and returns it.
      responses:
        '200':
          $ref: '#/components/responses/order_item'
        '404':
          $ref: '#/components/responses/order_not_found'
  /stores:
    get:
      tags:
        - Store
      operationId: getStores
      summary: Get stores
      description: |
        Returns the list of stores settings.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Store'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
              example:
                $ref: '#/components/examples/stores_response'
    post:
      tags:
        - Store
      operationId: createStoreById
      summary: Create store
      description: |
        Create store settings from a given name and channel.
      responses:
        '200':
          $ref: '#/components/responses/store_item'
        '400':
          $ref: '#/components/responses/already_exists'
  '/stores/{id}':
    get:
      tags:
        - Store
      operationId: getStoreSettings
      summary: Get store
      description: |
        Find store settings by given id and returns it.
      responses:
        '200':
          $ref: '#/components/responses/store_item'
        '404':
          $ref: '#/components/responses/store_not_found'
    delete:
      tags:
        - Store
      operationId: deleteStoreSettings
      summary: Destroy store
      description: |
        Find store settings by given id and destroy it.

        ~~~
        Only unauthorize stores can be destroyed.
        ~~~
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/store_not_found'
  '/stores/{id}/authorize':
    parameters:
      - name: redirect_uri
        in: query
        schema:
          $ref: '#/components/schemas/RedirectURI'
    get:
      tags:
        - Store
      operationId: authorizeStoreConnection
      summary: Authorize store
      description: |
        Find store settings by given id and redirect navigation to authorization uri.
      parameters:
        - redirect_uri:
            $ref: '#/components/schemas/RedirectURI'
      responses:
        '404':
          $ref: '#/components/responses/store_not_found'
  '/stores/{id}/destroy':
    get:
      tags:
        - Store
      operationId: destroyStoreSettings
      summary: Destroy store
      description: |
        Find store settings by given id and destroy it.

        ~~~
        Only unauthorize stores can be destroyed.
        ~~~
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/store_not_found'
  '/stores/{id}/unauthorize':
    get:
      tags:
        - Store
      operationId: unauthorizeStoreConnection
      summary: Cancel authorization
      description: |
        Find store settings by given id and disallow their connection.

        ~~~
        Only authorize stores can be unauthorizes.
        ~~~
      responses:
        '404':
          $ref: '#/components/responses/store_not_found'
  /tasks:
    get:
      tags:
        - Task
      operationId: getTasks
      summary: Get tasks
      description: |
        Returns the list of tasks executions.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
              example:
                $ref: '#/components/examples/tasks_response'
  '/tasks/{id}':
    get:
      tags:
        - Task
      operationId: getTaskSettings
      summary: Get task
      description: |
        Find task settings by given id and returns it.
      responses:
        '200':
          $ref: '#/components/responses/task_item'
        '404':
          $ref: '#/components/responses/task_not_found'
    delete:
      tags:
        - Task
      operationId: deleteTaskSettings
      summary: Destroy task
      description: |
        Find task settings by given id and destroy it.

        ~~~
        The tasks in running status can't be destroyed.
        ~~~
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/task_not_found'
components:
  schemas:
    Address:
      title: Address
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        country:
          type: string
        state:
          type: string
        city:
          type: string
        district:
          type: string
        town:
          type: string
        phone:
          type: string
        zip_code:
          type: string
        address:
          type: array
          items:
            type: string
    CreatedAt:
      description: Date in iso8601 when the record was created
      type: string
      format: date-time
    Customer:
      title: Customer
      type: object
      properties:
        customer_id:
          type: string
          title: Id
          description: Unique identifier for the customer
        firstname:
          type: string
          description: Customers first name
        lastname:
          type: string
          description: Customers last name
    Execution:
      type: object
      properties:
        started_at:
          description: Date in iso8601 when the task was started
          type: string
          format: date-time
        completed_at:
          description: Date in iso8601 when the task was completed
          type: string
          format: date-time
    LineItem:
      title: LineItem
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        quantity:
          type: integer
        price:
          type: number
        sku:
          type: string
        product_id:
          type: string
    Notification:
      type: object
      properties:
        type:
          description: 'Notification type [info, notice, warning or error]'
          type: string
        message:
          description: Notification message
          type: string
    Order:
      title: Order
      type: object
      properties:
        order_id:
          type: string
        number:
          type: string
        total_price:
          type: string
        total_quantity:
          type: integer
        status:
          type: string
        payment_method:
          type: string
        ship_address:
          $ref: '#/components/schemas/Address'
        bill_address:
          $ref: '#/components/schemas/Address'
        line_items:
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        hmac:
          type: string
        created_date:
          description: Date in iso8601 when the order was created
          type: string
          format: date-time
        updated_date:
          description: Date in iso8601 when the order was updated
          type: string
          format: date-time
        last_import_date:
          type: string
          format: date-time
        customer:
          $ref: '#/components/schemas/Customer'
        store:
          $ref: '#/components/schemas/Store'
    Pagination:
      type: object
      properties:
        offset:
          description: Offset
          type: integer
        limit:
          description: Limit
          type: integer
        total:
          description: Limit
          type: integer
    RedirectURI:
      description: URI to back after do authorization
      type: string
    Store:
      type: object
      properties:
        id:
          description: Store identifier
          type: string
          example: shop_01
        name:
          description: Store name
          type: string
        channel:
          description: Channel identifier
          type: string
          example: LazadaSG
        authorized:
          description: If store is authorized or not
          type: boolean
        last_import_orders_date:
          description: The last import orders date
          type: string
          format: date-time
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      required:
        - name
        - channel
    Success:
      type: object
      properties:
        success:
          description: Success status
          type: boolean
          example: false
        message:
          description: Error or Success message
          type: string
          example: '[404] - Not found store with id: shop_20'
    Task:
      type: object
      properties:
        id:
          description: Task identifier
          type: string
        status:
          description: Task execution status
          type: string
        progress:
          description: Task execution progress
          type: integer
        description:
          description: Task execution description
          type: string
        executions:
          description: Dates that started and completed each instance of execution of the task
          type: array
          items:
            $ref: '#/components/schemas/Execution'
        notifications:
          description: Notifications of tasks
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      required:
        - name
        - channel
    UpdatedAt:
      description: Date in iso8601 when the record was updated
      type: string
      format: date-time
  responses:
    already_exists:
      description: Already exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: false
            message: Already exist
    order_item:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Order'
          example:
            $ref: '#/components/examples/order_response'
    order_not_found:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: false
            message: 'Not found order with number: 9151224232846'
    store_item:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Store'
          example:
            $ref: '#/components/examples/store_response'
    store_not_found:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: false
            message: 'Not found store with id: shop_20'
    success:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: true
    task_item:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Task'
          example:
            $ref: '#/components/examples/task_response'
    task_not_found:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: false
            message: 'Not found task with id: 1234567890'
  examples:
    order_response:
      data:
        order_id: '9151224232845'
        number: '9151224232845'
        total_price: '2.00'
        total_quantity: 1
        status: canceled
        payment_method: Lazada_GENERIC
        ship_address:
          country: Singapore
          state: Singapore
          city: 'Singapore, Singapore'
          phone: '6590547759, 6590547759'
          zip_code: '549751'
          address:
            - '21 DA SILVA LANE,'
            - '549751'
        bill_address:
          country: Singapore
          state: Singapore
          city: 'Singapore, Singapore'
          phone: '6590547759, 6590547759'
          zip_code: '549751'
          address:
            - '21 DA SILVA LANE,'
            - '549751'
        last_import_date: '2019-06-07T20:47:26+00:00'
        customer:
          firstname: Christy Lee
        line_items:
          - id: '9151224432845'
            name: Short sleeve t-shirt
            quantity: 1
            price: 1.51
            sku: '2468'
        store:
          id: shop_01
          name: Shop-01
          channel: LazadaSG
          authorized: false
          last_import_orders_date: '2019-06-07T20:47:14+00:00'
          created_at: '2019-06-07T00:06:52+00:00'
          updated_at: '2019-06-07T20:47:32+00:00'
    orders_response:
      data:
        - order_id: '9151224232845'
          number: '9151224232845'
          total_price: '2.00'
          total_quantity: 1
          status: canceled
          payment_method: Lazada_GENERIC
          ship_address:
            country: Singapore
            state: Singapore
            city: 'Singapore, Singapore'
            phone: '6590547759, 6590547759'
            zip_code: '549751'
            address:
              - '21 DA SILVA LANE,'
              - '549751'
          bill_address:
            country: Singapore
            state: Singapore
            city: 'Singapore, Singapore'
            phone: '6590547759, 6590547759'
            zip_code: '549751'
            address:
              - '21 DA SILVA LANE,'
              - '549751'
          last_import_date: '2019-06-07T20:47:26+00:00'
          customer:
            firstname: Christy Lee
          line_items:
            - id: '9151224432845'
              name: Short sleeve t-shirt
              quantity: 1
              price: 1.51
              sku: '2468'
          store:
            id: shop_01
            name: Shop-01
            channel: LazadaSG
            authorized: false
            last_import_orders_date: '2019-06-07T20:47:14+00:00'
            created_at: '2019-06-07T00:06:52+00:00'
            updated_at: '2019-06-07T20:47:32+00:00'
        - order_id: '9170283050978'
          number: '9170283050978'
          total_price: '1.00'
          total_quantity: 1
          status: canceled
          payment_method: Lazada_GENERIC
          ship_address:
            country: Singapore
            state: Singapore
            city: 'Singapore, Singapore'
            phone: '6583221206, 6583221206'
            zip_code: '637665'
            address:
              - '98 NANYANG CRESCENT,#06-06'
              - '637665'
          bill_address:
            country: Singapore
            state: Singapore
            city: 'Singapore, Singapore'
            phone: '6583221206, 6583221206'
            zip_code: '637665'
            address:
              - '98 NANYANG CRESCENT,#06-06'
              - '637665'
          last_import_date: '2019-06-07T20:47:27+00:00'
          customer:
            firstname: Aravind Dasari
          line_items:
            - id: '9170283250978'
              name: Actxa Swift / Swift+ Charging Cradle
              quantity: 1
              price: 1
              sku: 0018227994491
          store:
            id: shop_01
            name: Shop-01
            channel: LazadaSG
            authorized: false
            last_import_orders_date: '2019-06-07T20:47:14+00:00'
            created_at: '2019-06-07T00:06:52+00:00'
            updated_at: '2019-06-07T20:47:32+00:00'
      pagination:
        offset: 0
        limit: 10
        total: 2
    store_response:
      data:
        id: shop_01
        name: Shop-01
        channel: LazadaSG
        authorized: true
        last_import_orders_date: '2019-06-07T20:47:14+00:00'
        created_at: '2019-06-07T00:06:52+00:00'
        updated_at: '2019-06-07T20:47:32+00:00'
    stores_response:
      data:
        - id: shop_01
          name: Shop-01
          channel: LazadaSG
          authorized: true
          last_import_orders_date: '2019-06-07T20:47:14+00:00'
          created_at: '2019-06-07T00:06:52+00:00'
          updated_at: '2019-06-07T20:47:32+00:00'
        - id: shop_02
          name: Shop-02
          channel: LazadaMY
          authorized: true
          last_import_orders_date: '2019-07-07T20:47:14+00:00'
          created_at: '2019-07-07T00:06:52+00:00'
          updated_at: '2019-07-07T20:47:32+00:00'
      pagination:
        offset: 0
        limit: 10
        total: 2
    task_response:
      data:
        id: 5cfe690b25d9854b3b02241b
        status: completed
        progress: 100
        description: Importing last updated orders from 'Shop-01' store.
        created_at: '2019-06-10T14:28:27+00:00'
        updated_at: '2019-06-10T14:28:43+00:00'
        executions:
          - started_at: '2019-06-10T14:28:27+00:00'
            completed_at: '2019-06-10T14:28:43+00:00'
        notifications:
          - type: info
            message: Imported order 17851977370457 from Shop-01 store.
          - type: info
            message: Imported order 8834309804556 from Shop-01 store.
          - type: info
            message: Imported order 16159781406633 from Shop-01 store.
          - type: info
            message: Importing form 1 to 3.
          - type: info
            message: 'Importing orders updated after ''2019-03-12 14:28:27 UTC'' from Shop-01 store.'
    tasks_response:
      data:
        - id: 5cfe690b25d9854b3b02241b
          status: completed
          progress: 100
          description: Importing last updated orders from 'Shop-01' store.
          created_at: '2019-06-10T13:35:27+00:00'
          updated_at: '2019-06-10T13:35:43+00:00'
          executions:
            - started_at: '2019-06-10T13:35:27+00:00'
              completed_at: '2019-06-10T13:35:43+00:00'
          notifications:
            - type: info
              message: Imported order 17851977370457 from Shop-01 store.
            - type: info
              message: Imported order 8834309804556 from Shop-01 store.
            - type: info
              message: Imported order 16159781406633 from Shop-01 store.
            - type: info
              message: Importing form 1 to 3.
            - type: info
              message: 'Importing orders updated after ''2019-03-12 14:28:27 UTC'' from Shop-01 store.'
        - id: 5cfe5ca825d9854aff021043
          status: completed
          progress: 100
          description: Importing last updated orders from 'Shop-01' store.
          created_at: '2019-06-10T13:35:27+00:00'
          updated_at: '2019-06-10T13:35:43+00:00'
          executions:
            - started_at: '2019-06-10T13:35:27+00:00'
              completed_at: '2019-06-10T13:35:43+00:00'
          notifications:
            - type: info
              message: Imported order 37851977370457 from Shop-01 store.
            - type: info
              message: Imported order 2834309804556 from Shop-01 store.
            - type: info
              message: Imported order 36159781406633 from Shop-01 store.
            - type: info
              message: Importing form 1 to 3.
            - type: info
              message: 'Importing orders updated after ''2019-03-12 14:28:27 UTC'' from Shop-01 store.'
      pagination:
        offset: 0
        limit: 10
        total: 2
  headers: {}
