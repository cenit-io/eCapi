openapi: 3.0.0
info:
  version: v1
  title: OMNA COMMERCE API
  termsOfService: 'https://cenit.io/terms'
  contact:
    email: hello@omna.io
    url: 'https://cenitio.slack.com/messages/support'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: omna_logo.png
  description: |
    # Introduction
    * The OMNA COMMERCE API is built over REST services on HTTPS.
    * It has predictable resource URLs.
    * It returns HTTP response codes to indicate errors.
    * It also accepts and returns JSON in the HTTP body.
    * You can use your favorite HTTP/REST library for your programming language to use OMNA COMMERCE API.
tags:
  - name: Integrations
    description: Operations about integrations
  - name: Orders
    description: Operations about orders
  - name: Flows
    description: Operations about flows
  - name: Webhooks
    description: Operations about webhooks
  - name: Tasks
    description: Operations about tasks
servers:
  - url: 'https://cenit.io/app/ecapi-v1'
security:
  - Token: []
    Timestamp: []
    HMac: []
paths:
  /flows:
    get:
      tags:
        - Flows
      operationId: getFlows
      summary: LIST ALL FLOWS
      description: |
        Returns the list of flows settings.
      parameters:
        - $ref: '#/components/parameters/query_filter_term_for_flows'
        - $ref: '#/components/parameters/query_filter_integration'
        - $ref: '#/components/parameters/query_filter_flow_type'
        - $ref: '#/components/parameters/query_offset'
        - $ref: '#/components/parameters/query_limit'
      responses:
        '200':
          $ref: '#/components/responses/flow_items'
    post:
      tags:
        - Flows
      operationId: createFlow
      summary: CREATE A FLOW
      description: |
        Create flow settings from a given name and channel.
      requestBody:
        $ref: '#/components/requestBodies/create_flow'
      responses:
        '200':
          $ref: '#/components/responses/flow_item'
        '400':
          $ref: '#/components/responses/already_exists'
  '/flows/{flow_id}':
    parameters:
      - $ref: '#/components/parameters/path_flow_id'
    get:
      tags:
        - Flows
      operationId: getFlow
      summary: RETRIEVE A FLOW
      description: |
        Find flow by given id and returns it.
      responses:
        '200':
          $ref: '#/components/responses/flow_item'
        '404':
          $ref: '#/components/responses/flow_not_found'
    post:
      tags:
        - Flows
      operationId: updateFlow
      summary: UPDATE A FLOW SCHEDULER
      description: |
        Find flow by given id and update it scheduler.
      requestBody:
        $ref: '#/components/requestBodies/update_flow'
      responses:
        '200':
          $ref: '#/components/responses/flow_item'
        '404':
          $ref: '#/components/responses/flow_not_found'
    delete:
      tags:
        - Flows
      operationId: deleteFlow
      summary: DELETE A FLOW
      description: |
        Find flow by given id and destroy it.
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/flow_not_found'
  '/flows/{flow_id}/destroy':
    parameters:
      - $ref: '#/components/parameters/path_flow_id'
    get:
      tags:
        - Flows
      operationId: destroyFlow
      summary: DESTROY A FLOW
      description: |
        Find flow by given id and destroy it.
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/flow_not_found'
  '/flows/{flow_id}/start':
    parameters:
      - $ref: '#/components/parameters/path_flow_id'
    get:
      tags:
        - Flows
      operationId: startFlow
      summary: START A FLOW
      description: |
        Find flow by given id and start its processing.

        > If exists any task of this flow in the execution or pending state, then the same task is returned, otherwise a new task is created.
      responses:
        '200':
          $ref: '#/components/responses/task_item'
        '404':
          $ref: '#/components/responses/flow_not_found'
  '/flows/{flow_id}/toggle/scheduler/status':
    parameters:
      - $ref: '#/components/parameters/path_flow_id'
    get:
      tags:
        - Flows
      operationId: toggleFlowSchedulerStatus
      summary: TOGGLE A SCHEDULER STATUS
      description: |
        Find flow by given id and activate or deactivate its scheduler.
      responses:
        '200':
          $ref: '#/components/responses/flow_item'
        '404':
          $ref: '#/components/responses/flow_not_found'
  /integrations:
    get:
      tags:
        - Integrations
      operationId: getIntegrations
      summary: LIST ALL INTEGRATIONS
      description: |
        Returns the list of your integrations.
      parameters:
        - $ref: '#/components/parameters/query_filter_term_for_integrations'
        - $ref: '#/components/parameters/query_filter_integration_channel'
        - $ref: '#/components/parameters/query_offset'
        - $ref: '#/components/parameters/query_limit'
      responses:
        '200':
          $ref: '#/components/responses/integration_items'
    post:
      tags:
        - Integrations
      operationId: createIntegration
      summary: CREATE A INTEGRATION
      description: |
        Creates a new integration object from a given name and channel.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    name:
                      description: Integration name
                      type: string
                    channel:
                      description: Channel identifier
                      type: string
            examples:
              e1:
                summary: To Lazada integration
                value:
                  data:
                    name: Shop-01
                    channel: LazadaSG
              e2:
                summary: To Shopee integration
                value:
                  data:
                    name: Shop-02
                    channel: ShopeeSG
      responses:
        '200':
          $ref: '#/components/responses/integration_item'
        '400':
          $ref: '#/components/responses/already_exists'
  '/integrations/{integration_id}':
    parameters:
      - $ref: '#/components/parameters/path_integration_id'
    get:
      tags:
        - Integrations
      operationId: getIntegrationSettings
      summary: RETRIEVE A INTEGRATION
      description: |
        Find integration settings by given id and returns it.
      responses:
        '200':
          $ref: '#/components/responses/integration_item'
        '404':
          $ref: '#/components/responses/integration_not_found'
    delete:
      tags:
        - Integrations
      operationId: deleteIntegrationSettings
      summary: DELETE A INTEGRATION
      description: |
        Find integration settings by given id and destroy it.

        > Only unauthorize integrations can be destroyed.
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/integration_not_found'
  '/integrations/{integration_id}/authorize':
    parameters:
      - $ref: '#/components/parameters/path_integration_id'
    get:
      tags:
        - Integrations
      operationId: authorizeIntegrationConnection
      summary: RETRIEVE A INTEGRATION AUTHORIATION
      description: |
        Find integration settings by given id and redirect navigation to authorization uri.
      parameters:
        - name: redirect_uri
          in: query
          schema:
            $ref: '#/components/schemas/RedirectURI'
      responses:
        '404':
          $ref: '#/components/responses/integration_not_found'
    delete:
      tags:
        - Integrations
      operationId: unauthorizeIntegrationConnection
      summary: CANCEL A INTEGRATION AUTHORIATION
      description: |
        Find integration settings by given id and disallow their connection.

        > Only authorize integrations can be unauthorizes.
      responses:
        '404':
          $ref: '#/components/responses/integration_not_found'
  '/integrations/{integration_id}/destroy':
    parameters:
      - $ref: '#/components/parameters/path_integration_id'
    get:
      tags:
        - Integrations
      operationId: destroyIntegrationSettings
      summary: DESTROY A INTEGRATION
      description: |
        Find integration settings by given id and destroy it.

        > Only unauthorize integrations can be destroyed.
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/integration_not_found'
  '/integrations/{integration_id}/flows':
    parameters:
      - $ref: '#/components/parameters/path_integration_id'
      - $ref: '#/components/parameters/query_filter_term_for_flows'
      - $ref: '#/components/parameters/query_filter_flow_type'
      - $ref: '#/components/parameters/query_offset'
      - $ref: '#/components/parameters/query_limit'
    get:
      tags:
        - Flows
        - Integrations
      operationId: getIntegrationFlows
      summary: LIST ALL FLOWS FROM A INTEGRATION
      description: |
        Returns the flow list of a specific integration.
      responses:
        '200':
          $ref: '#/components/responses/flow_items'
  '/integrations/{integration_id}/orders':
    parameters:
      - $ref: '#/components/parameters/path_integration_id'
      - $ref: '#/components/parameters/query_filter_term_for_orders'
      - $ref: '#/components/parameters/query_offset'
      - $ref: '#/components/parameters/query_limit'
    get:
      tags:
        - Orders
        - Integrations
      operationId: getIntegrationOrders
      summary: LIST ALL ORDERS FROM A INTEGRATION
      description: |
        Returns the order list of a specific integration.
      responses:
        '200':
          $ref: '#/components/responses/order_items'
  '/integrations/{integration_id}/orders/{number}':
    parameters:
      - $ref: '#/components/parameters/path_integration_id'
      - $ref: '#/components/parameters/path_order_number'
    get:
      tags:
        - Orders
      operationId: getOrder
      summary: RETRIVE AN ORDER FROM A INTEGRATION
      description: |
        Find order by given id and returns it.
      responses:
        '200':
          $ref: '#/components/responses/order_item'
        '404':
          $ref: '#/components/responses/order_not_found'
  '/integrations/{integration_id}/orders/{number}/doc/{doc_type}':
    parameters:
      - $ref: '#/components/parameters/path_integration_id'
      - $ref: '#/components/parameters/path_order_number'
      - $ref: '#/components/parameters/path_doc_type'
    get:
      tags:
        - Orders
      operationId: getOrderDoc
      summary: RETRIEVE A DOCUMENT FROM AN ORDER
      description: |
        Retrieve a specific document of the order.

        > To reconstruct the file, the data from the node needs to be base64 decoded, and interpreted according to the mime_type.
      responses:
        '200':
          $ref: '#/components/responses/order_doc'
  '/integrations/{integration_id}/orders/{number}/doc/types':
    parameters:
      - $ref: '#/components/parameters/path_integration_id'
      - $ref: '#/components/parameters/path_order_number'
    get:
      tags:
        - Orders
      operationId: getOrderDocTypes
      summary: LIST ALL DOCUMENT TYPES FROM AN ORDER
      description: |
        Return the list of types of order documents
      responses:
        '200':
          $ref: '#/components/responses/order_doc_types'
  '/integrations/{integration_id}/orders/{number}/import':
    parameters:
      - $ref: '#/components/parameters/path_integration_id'
      - $ref: '#/components/parameters/path_order_number'
    get:
      tags:
        - Orders
      operationId: importOrder
      summary: IMPORT A SINGLE ORDER FROM A INTEGRATION
      description: |
        Import a specific order from a integration
      responses:
        '200':
          $ref: '#/components/responses/task_item'
        '404':
          $ref: '#/components/responses/integration_not_found'
  '/integrations/{integration_id}/orders/import':
    parameters:
      - $ref: '#/components/parameters/path_integration_id'
    get:
      tags:
        - Orders
      operationId: importOrders
      summary: IMPORT UPDATED ORDERS FROM INTEGRATION
      description: |
        Import the last updated orders from a integration
      responses:
        '200':
          $ref: '#/components/responses/task_item'
        '404':
          $ref: '#/components/responses/integration_not_found'
  '/integrations/{integration_id}/unauthorize':
    parameters:
      - $ref: '#/components/parameters/path_integration_id'
    get:
      tags:
        - Integrations
      operationId: unauthorizeIntegrationConnection2
      summary: CANCEL A INTEGRATION AUTHORIZATION
      description: |
        Find integration settings by given id and disallow their connection.

        > Only authorize integrations can be unauthorizes.
      responses:
        '404':
          $ref: '#/components/responses/integration_not_found'
  /integrations/channels:
    get:
      tags:
        - Integrations
      operationId: getIntegrationChannels
      summary: LIST ALL INTEGRATION CHANNELS
      description: |
        Returns the list of integration channels availables.
      responses:
        '200':
          $ref: '#/components/responses/integration_channels'
  /orders:
    parameters:
      - $ref: '#/components/parameters/query_filter_term_for_orders'
      - $ref: '#/components/parameters/query_filter_integration'
      - $ref: '#/components/parameters/query_offset'
      - $ref: '#/components/parameters/query_limit'
    get:
      tags:
        - Orders
      operationId: getOrders
      summary: LIST ALL ORDERS
      description: |
        Returns the list of orders.
      responses:
        '200':
          $ref: '#/components/responses/order_items'
  '/orders/{integration_id}/{number}':
    parameters:
      - $ref: '#/components/parameters/path_integration_id'
      - $ref: '#/components/parameters/path_order_number'
    get:
      deprecated: true
      tags:
        - Orders
      operationId: getOrderDeprecate
      summary: RETRIEVE AN ORDER
      description: |
        Find order by given id and returns it.
      responses:
        '200':
          $ref: '#/components/responses/order_item'
        '404':
          $ref: '#/components/responses/order_not_found'
  '/orders/{integration_id}/import':
    parameters:
      - $ref: '#/components/parameters/path_integration_id'
    get:
      deprecated: true
      tags:
        - Orders
      operationId: importOrdersDeprecate
      summary: IMPORT UPDATED ORDERS
      description: |
        Import the last updated orders from a integration
      responses:
        '200':
          $ref: '#/components/responses/task_item'
        '404':
          $ref: '#/components/responses/integration_not_found'
  /tasks:
    get:
      tags:
        - Tasks
      operationId: getTasks
      summary: LIST ALL TASKS
      description: |
        Returns the list of tasks executions.
      parameters:
        - $ref: '#/components/parameters/query_filter_term_for_tasks'
        - $ref: '#/components/parameters/query_task_status'
        - $ref: '#/components/parameters/query_offset'
        - $ref: '#/components/parameters/query_limit'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
              example:
                $ref: '#/components/examples/tasks_response'
  '/tasks/{task_id}':
    parameters:
      - $ref: '#/components/parameters/path_task_id'
    get:
      tags:
        - Tasks
      operationId: getTask
      summary: RETRIEVE A TASK
      description: |
        Find task by given id and returns it.
      responses:
        '200':
          $ref: '#/components/responses/task_item'
        '404':
          $ref: '#/components/responses/task_not_found'
    delete:
      tags:
        - Tasks
      operationId: deleteTask
      summary: DELETE A TASK
      description: |
        Find task by given id and delete it.

        > The tasks in running status can't be deleted.
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/task_not_found'
  '/tasks/{task_id}/destroy':
    parameters:
      - $ref: '#/components/parameters/path_task_id'
    get:
      tags:
        - Tasks
      operationId: destroyTask
      summary: DESTROY A TASK
      description: |
        Find task by given id and destroy it.

        > The tasks in running status can't be destroyed.
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/task_not_found'
  '/tasks/{task_id}/retry':
    parameters:
      - $ref: '#/components/parameters/path_task_id'
    get:
      tags:
        - Tasks
      operationId: retryTask
      summary: RETRY A TASK
      description: |
        Find a task for the given id and retry its execution.

        > Only failed tasks can be retry.
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/task_not_found'
  /webhooks:
    get:
      tags:
        - Webhooks
      operationId: getWebhooks
      summary: LIST ALL WEBHOOKS
      description: |
        Returns the list of webhooks settings.
      parameters:
        - $ref: '#/components/parameters/query_filter_term_for_webhooks'
        - $ref: '#/components/parameters/query_filter_webhook_topic'
        - $ref: '#/components/parameters/query_filter_integration'
        - $ref: '#/components/parameters/query_offset'
        - $ref: '#/components/parameters/query_limit'
      responses:
        '200':
          $ref: '#/components/responses/webhook_items'
    post:
      tags:
        - Webhooks
      operationId: createWebhook
      summary: CREATE A WEBHOOK
      description: |
        Create webhook settings from a given topic, address and integration.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    topic:
                      description: Webhook name
                      type: string
                    address:
                      description: URl destination of information
                      type: string
            example:
              data:
                integration_id: shop_01
                topic: orders/registered
                address: 'http://myintegration.com'
      responses:
        '200':
          $ref: '#/components/responses/webhook_item'
        '400':
          $ref: '#/components/responses/already_exists'
  '/webhooks/{webhook_id}':
    parameters:
      - $ref: '#/components/parameters/path_webhook_id'
    get:
      tags:
        - Webhooks
      operationId: getWebhook
      summary: RETRIEVE A WEBHOOK
      description: |
        Find webhook by given id and returns it.
      responses:
        '200':
          $ref: '#/components/responses/webhook_item'
        '404':
          $ref: '#/components/responses/webhook_not_found'
    delete:
      tags:
        - Webhooks
      operationId: deleteWebhook
      summary: DELETE A WEBHOOK
      description: |
        Find webhook by given id and delete it.
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/webhook_not_found'
    post:
      tags:
        - Webhooks
      operationId: updWebhook
      summary: UPDATE A WEBHOOK
      description: |
        Find webhook by given id and update it.
      responses:
        '200':
          $ref: '#/components/responses/webhook_item'
        '404':
          $ref: '#/components/responses/webhook_not_found'
  '/webhooks/{webhook_id}/destroy':
    parameters:
      - $ref: '#/components/parameters/path_webhook_id'
    get:
      tags:
        - Webhooks
      operationId: destroyWebhook
      summary: DESTROY A WEBHOOK
      description: |
        Find webhook by given id and destroy it.
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/webhook_not_found'
components:
  schemas:
    Address:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        country:
          type: string
        state:
          type: string
        city:
          type: string
        district:
          type: string
        town:
          type: string
        phone:
          type: string
        zip_code:
          type: string
        address:
          type: array
          items:
            type: string
    CreatedAt:
      description: Date in iso8601 when the record was created
      type: string
      format: date-time
    Customer:
      type: object
      description: Customer
      properties:
        customer_id:
          type: string
          description: Unique identifier for the customer
        first_name:
          type: string
          description: Customers first name
        last_name:
          type: string
          description: Customers last name
    Execution:
      type: object
      properties:
        status:
          description: Status of task execution
          type: string
        started_at:
          description: Date in iso8601 when the task was started
          type: string
          format: date-time
        completed_at:
          description: Date in iso8601 when the task was completed
          type: string
          format: date-time
    Flow:
      type: object
      properties:
        id:
          description: Flow identifier
          type: string
        type:
          description: Flow type name
          type: string
        title:
          description: The human-readable flow type name
          type: string
        task:
          $ref: '#/components/schemas/Task'
        integration:
          $ref: '#/components/schemas/Integration'
    FlowRequestBody:
      type: object
      title: Flow
      description: Flow request body scheme
      properties:
        integration_id:
          description: Integration settings identifier
          type: string
        type:
          description: Flow type name
          type: string
        scheduler:
          $ref: '#/components/schemas/SchedulerRequestBody'
    Integration:
      type: object
      description: Integration settings
      properties:
        id:
          description: Integration identifier
          type: string
        name:
          description: Integration name
          type: string
        channel:
          description: Channel identifier
          type: string
        authorized:
          description: If integration is authorized or not
          type: boolean
        last_import_orders_date:
          description: The last import orders date
          type: string
          format: date-time
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      required:
        - name
        - channel
    IntegrationChannel:
      type: object
      properties:
        name:
          description: Channel identifier
          type: string
        title:
          description: Channel identifier
          type: string
    LineItem:
      title: LineItem
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        quantity:
          type: integer
        price:
          type: number
        sku:
          type: string
        product_id:
          type: string
    Notification:
      type: object
      properties:
        type:
          description: 'Notification type [info, notice, warning or error]'
          type: string
        message:
          description: Notification message
          type: string
    Order:
      type: object
      properties:
        order_id:
          description: Order identifier
          type: string
        number:
          description: The human-readable order number
          type: string
        total_price:
          description: Total amount for this order
          type: string
        total_quantity:
          description: Number of items in order
          type: integer
        status:
          description: Order status
          type: string
        payment_method:
          description: The method of the payment
          type: string
        ship_address:
          description: Shipping address
          allOf:
            - $ref: '#/components/schemas/Address'
        bill_address:
          description: Billing address
          allOf:
            - $ref: '#/components/schemas/Address'
        line_items:
          description: Order items
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        created_date:
          description: Date in iso8601 when the order was created
          type: string
          format: date-time
        updated_date:
          description: Date in iso8601 when the order was updated
          type: string
          format: date-time
        last_import_date:
          description: Date in iso8601 when the order was imported
          type: string
          format: date-time
        customer:
          $ref: '#/components/schemas/Customer'
        integration:
          $ref: '#/components/schemas/Integration'
    OrderDocument:
      type: object
      properties:
        file:
          description: File content in base64 encoded
          type: string
        mime_type:
          description: Mime type
          type: string
        document_type:
          description: Type of document
          type: string
    OrderDocumentType:
      type: object
      properties:
        type:
          description: Document type identifier
          type: string
        name:
          description: Nombre legible del tipo de documento
          type: string
    Pagination:
      type: object
      properties:
        offset:
          description: Offset
          type: integer
        limit:
          description: Limit
          type: integer
        total:
          description: Limit
          type: integer
    RedirectURI:
      description: URI to back after do authorization
      type: string
    Scheduler:
      type: object
      description: Scheduler settings
      properties:
        active:
          description: Scheduler status
          type: boolean
        start_date:
          description: Date from which the task will begin executing
          type: string
          format: date
        end_date:
          description: Date from which the task will be stopped executing
          type: string
          format: date
        time:
          description: Hour and minute in which the task will be executed
          type: string
          format: time
        days_of_week:
          description: Days of the week in which the task will be executed
          type: array
          items:
            type: string
        weeks_of_month:
          description: Weeks of the month in which the task will be executed
          type: array
          items:
            type: string
        months_of_year:
          description: Months of the year in which the task will be executed
          type: array
          items:
            type: string
    SchedulerRequestBody:
      type: object
      title: Scheduler
      description: Scheduler request body scheme
      properties:
        start_date:
          description: Date from which the task will begin executing
          type: string
          format: date
        end_date:
          description: Date from which the task will be stopped executing
          type: string
          format: date
        time:
          description: Hour and minute in which the task will be executed
          type: string
          format: time
        days_of_week:
          description: Days of the week in which the task will be executed
          type: array
          items:
            type: string
        weeks_of_month:
          description: Weeks of the month in which the task will be executed
          type: array
          items:
            type: string
        months_of_year:
          description: Months of the year in which the task will be executed
          type: array
          items:
            type: string
    Success:
      type: object
      properties:
        success:
          description: Success status
          type: boolean
        message:
          description: Error or Success message
          type: string
    Task:
      type: object
      properties:
        id:
          description: Task identifier
          type: string
        status:
          description: Task execution status
          type: string
        progress:
          description: Task execution progress
          type: integer
        description:
          description: Task execution description
          type: string
        executions:
          description: Dates that started and completed each instance of execution of the task
          type: array
          items:
            $ref: '#/components/schemas/Execution'
        notifications:
          description: Notifications of tasks
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        scheduler:
          $ref: '#/components/schemas/Scheduler'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      required:
        - name
        - channel
    UpdatedAt:
      description: Date in iso8601 when the record was updated
      type: string
      format: date-time
    Webhook:
      type: object
      properties:
        id:
          description: Webhook identifier
          type: string
        topic:
          description: Webhook topic name
          type: string
        address:
          description: URl destination of information
          type: string
        integration:
          $ref: '#/components/schemas/Integration'
  responses:
    already_exists:
      description: Already exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: false
            message: Already exist
    flow_item:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Flow'
          examples:
            Ex1:
              $ref: '#/components/examples/flow_item_response'
    flow_items:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Flow'
              pagination:
                $ref: '#/components/schemas/Pagination'
          examples:
            Ex1:
              $ref: '#/components/examples/flow_items_response'
    flow_not_found:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: false
            message: 'Not found flow with id: 5d04051125d9852c71016793'
    integration_channels:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/IntegrationChannel'
              pagination:
                $ref: '#/components/schemas/Pagination'
          examples:
            Ex1:
              $ref: '#/components/examples/integration_channels_response'
    integration_item:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Integration'
          examples:
            Ex1:
              $ref: '#/components/examples/integration_item_response'
    integration_items:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Integration'
              pagination:
                $ref: '#/components/schemas/Pagination'
          examples:
            Ex1:
              $ref: '#/components/examples/integration_items_response'
    integration_not_found:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: false
            message: 'Not found integration with id: shop_20'
    order_doc_types:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDocumentType'
          examples:
            Ex1:
              $ref: '#/components/examples/order_doc_types_response'
    order_doc:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/OrderDocument'
          examples:
            Ex1:
              $ref: '#/components/examples/order_doc_response'
    order_item:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Order'
          examples:
            Ex1:
              $ref: '#/components/examples/order_response'
    order_items:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
              pagination:
                $ref: '#/components/schemas/Pagination'
          examples:
            Ex1:
              $ref: '#/components/examples/order_items_response'
    order_not_found:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: false
            message: 'Not found order with number: 9151224232846'
    success:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: true
    task_item:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Task'
          examples:
            Ex1:
              $ref: '#/components/examples/task_response'
    task_not_found:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: false
            message: 'Not found task with id: 1234567890'
    webhook_item:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Webhook'
          examples:
            Ex1:
              $ref: '#/components/examples/webhook_item_response'
    webhook_items:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
              pagination:
                $ref: '#/components/schemas/Pagination'
          examples:
            Ex1:
              $ref: '#/components/examples/webhooks_items_response'
    webhook_not_found:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: false
            message: 'Not found webhook with id: 5d04051125d9852c71016793'
  parameters:
    auth_hmac:
      name: hmac
      in: query
      required: true
      schema:
        description: Keyed-Hash message authentication code.
        type: string
        example: d24c9128362b0518f9ca2bf767b4a60a59aefe0f63ebeb7d47ec594442fc7a8f
    auth_timestamp:
      name: timestamp
      in: query
      required: true
      schema:
        description: The time stamp of the request with less than 7200 secounds difference from UTC time.
        type: integer
        example: 1517820392000
    auth_token:
      name: token
      in: query
      required: true
      schema:
        description: Tenant authentication token.
        type: string
        example: Ds3sBBSnyFnOqSjCARmX
    path_doc_type:
      name: doc_type
      in: path
      required: true
      schema:
        description: Document type
        type: string
        example: invoice
    path_flow_id:
      name: flow_id
      in: path
      required: true
      schema:
        description: Flow identifier
        type: string
        example: 5d04051125d9852c71016793
    path_integration_id:
      name: integration_id
      in: path
      required: true
      schema:
        description: Integration identifier
        type: string
        example: shop_01
    path_order_number:
      name: number
      in: path
      required: true
      schema:
        description: Order number
        type: string
        example: 9170283050978
    path_task_id:
      name: task_id
      in: path
      required: true
      schema:
        description: Task identifier
        type: string
        example: 5d029d6625d985755e02202c
    path_webhook_id:
      name: webhook_id
      in: path
      required: true
      schema:
        description: Webhook identifier
        type: string
        example: 5d13be7025d9853de90012b6
    query_filter_flow_type:
      name: type
      in: query
      schema:
        description: Allow to filter the items by flow type.
        type: string
        example: import_orders
    query_filter_integration_channel:
      name: channel
      in: query
      schema:
        description: Allow to filter the items by integration channel.
        type: string
        example: LazadaSG
    query_filter_integration:
      name: integration_id
      in: query
      schema:
        description: Allow to filter the items by integration.
        type: string
        example: shop_01
    query_filter_term_for_flows:
      name: term
      in: query
      schema:
        description: Allow to filter the flows that contain the value of the term in their ***type***.
        type: string
        example: Shop-Lazada
    query_filter_term_for_integrations:
      name: term
      in: query
      schema:
        description: Allow to filter the integrations settings that contain the value of the term in their ***name***.
        type: string
        example: Shop-Lazada
    query_filter_term_for_orders:
      name: term
      in: query
      schema:
        description: Allow to filter the orders that contain the value of the term in their ***number*** or ***status***.
        type: string
        example: pending
    query_filter_term_for_tasks:
      name: term
      in: query
      schema:
        description: Allow to filter the tasks that contain the value of the term in their ***status*** or ***description***.
        type: string
        example: Shop-Lazada
    query_filter_term_for_webhooks:
      name: term
      in: query
      schema:
        description: Allow to filter the webhooks that contain the value of the term in their ***topic***.
        type: string
        example: orders
    query_filter_webhook_topic:
      name: topic
      in: query
      schema:
        description: Allow to filter the items by webhook topic.
        type: string
        example: orders/registered
    query_limit:
      name: limit
      in: query
      schema:
        description: The maximum number of items that can be returned. The supported values ​​are between 10 and 100.
        type: integer
        example: 10
    query_offset:
      name: offset
      in: query
      schema:
        description: Number of items to skip at the beginning of the list.
        type: integer
        example: 10
    query_task_status:
      name: status
      in: query
      schema:
        description: Allow to filter the tasks by ***status***.
        type: string
        example: 5d029d6625d985755e02202c
  examples:
    flow_create_request_1:
      summary: With scheduler
      value:
        data:
          integration_id: shop_01
          type: import_orders
          scheduler:
            start_date: '2019-06-20'
            end_date: '2019-06-21'
            time: '12:0'
            days_of_week:
              - Mon
              - Wed
              - Fri
            weeks_of_month:
              - First
              - Third
              - Last
            months_of_year:
              - Jan
              - Apr
              - Jul
              - Oct
    flow_create_request_2:
      summary: Without scheduler
      value:
        data:
          integration_id: shop_01
          type: import_orders
    flow_item_response:
      value:
        data:
          id: 5d04051125d9852c71016793
          type: import_orders
          title: Import orders from integration
          created_at: '2019-06-07T00:06:52+00:00'
          updated_at: '2019-06-07T20:47:32+00:00'
          integration:
            id: shop_01
            name: Shop-01
            channel: LazadaSG
            authorized: true
            last_import_orders_date: '2019-06-07T20:47:14+00:00'
            created_at: '2019-06-07T00:06:52+00:00'
            updated_at: '2019-06-07T20:47:32+00:00'
          task:
            id: 5cfe690b25d9854b3b02241b
            status: completed
            progress: 100
            description: Importing last updated orders from 'Shop-01' integration.
            created_at: '2019-06-10T14:28:27+00:00'
            updated_at: '2019-06-10T14:28:43+00:00'
            executions:
              - status: completed
                started_at: '2019-06-10T14:28:27+00:00'
                completed_at: '2019-06-10T14:28:43+00:00'
            notifications:
              - type: info
                message: Imported order 17851977370457 from Shop-01 integration.
              - type: info
                message: Imported order 8834309804556 from Shop-01 integration.
              - type: info
                message: Imported order 16159781406633 from Shop-01 integration.
              - type: info
                message: Importing form 1 to 3.
              - type: info
                message: 'Importing orders updated after ''2019-03-12 14:28:27 UTC'' from Shop-01 integration.'
            scheduler:
              active: true
              start_date: '2019-06-20'
              end_date: '2019-06-21'
              time: '12:0'
              days_of_week:
                - Mon
                - Wed
                - Fri
              weeks_of_month:
                - First
                - Third
                - Last
              months_of_year:
                - Jan
                - Apr
                - Jul
                - Oct
    flow_items_response:
      value:
        data:
          - id: 5d04051125d9852c71016793
            type: import_orders
            title: Import orders from integration
            created_at: '2019-06-07T00:06:52+00:00'
            updated_at: '2019-06-07T20:47:32+00:00'
            integration:
              id: shop_01
              name: Shop-01
              channel: LazadaSG
              authorized: true
              last_import_orders_date: '2019-06-07T20:47:14+00:00'
              created_at: '2019-06-07T00:06:52+00:00'
              updated_at: '2019-06-07T20:47:32+00:00'
            task:
              id: 5cfe690b25d9854b3b02241b
              status: completed
              progress: 100
              description: Importing last updated orders from 'Shop-01' integration.
              created_at: '2019-06-10T14:28:27+00:00'
              updated_at: '2019-06-10T14:28:43+00:00'
              executions:
                - status: completed
                  started_at: '2019-06-10T14:28:27+00:00'
                  completed_at: '2019-06-10T14:28:43+00:00'
              notifications:
                - type: info
                  message: Imported order 17851977370457 from Shop-01 integration.
                - type: info
                  message: Imported order 8834309804556 from Shop-01 integration.
                - type: info
                  message: Imported order 16159781406633 from Shop-01 integration.
                - type: info
                  message: Importing form 1 to 3.
                - type: info
                  message: 'Importing orders updated after ''2019-03-12 14:28:27 UTC'' from Shop-01 integration.'
              scheduler:
                active: true
                start_date: '2019-06-20'
                end_date: '2019-06-21'
                time: '12:0'
                days_of_week:
                  - Mon
                  - Wed
                  - Fri
                weeks_of_month:
                  - First
                  - Third
                  - Last
                months_of_year:
                  - Jan
                  - Apr
                  - Jul
                  - Oct
        pagination:
          offset: 0
          limit: 10
          total: 1
    flow_update_request:
      summary: With scheduler
      value:
        data:
          scheduler:
            start_date: '2019-06-20'
            end_date: '2019-06-21'
            time: '12:0'
            days_of_week:
              - Mon
              - Wed
              - Fri
            weeks_of_month:
              - First
              - Third
              - Last
            months_of_year:
              - Jan
              - Apr
              - Jul
              - Oct
    integration_channels_response:
      value:
        data:
          - name: LazadaID
            title: Lazada Indonesia
          - name: LazadaMY
            title: Lazada Malaysia
          - name: ShopeeTH
            title: Shopee Thailand
          - name: ShopeeVN
            title: Shopee Vietnam
    integration_item_response:
      value:
        data:
          id: shop_01
          name: Shop-01
          channel: LazadaSG
          authorized: true
          last_import_orders_date: '2019-06-07T20:47:14+00:00'
          created_at: '2019-06-07T00:06:52+00:00'
          updated_at: '2019-06-07T20:47:32+00:00'
    integration_items_response:
      value:
        data:
          - id: shop_01
            name: Shop-01
            channel: LazadaSG
            authorized: true
            last_import_orders_date: '2019-06-07T20:47:14+00:00'
            created_at: '2019-06-07T00:06:52+00:00'
            updated_at: '2019-06-07T20:47:32+00:00'
          - id: shop_02
            name: Shop-02
            channel: LazadaMY
            authorized: true
            last_import_orders_date: '2019-07-07T20:47:14+00:00'
            created_at: '2019-07-07T00:06:52+00:00'
            updated_at: '2019-07-07T20:47:32+00:00'
        pagination:
          offset: 0
          limit: 10
          total: 2
    order_doc_response:
      value:
        data:
          file: T3JkZXIgZG9jdWVtbnQgZXhhbXBsZS4uLgo=
          mime_type: text/html
          document_type: invoice
    order_doc_types_response:
      value:
        data:
          - type: invoice
            title: Invoice
          - type: shippingLabel
            title: Shipping Label
          - type: carrierManifest
            title: Carrier Manifest
    order_items_response:
      value:
        data:
          - order_id: '9151224232845'
            number: '9151224232845'
            total_price: '2.00'
            total_quantity: 1
            status: canceled
            payment_method: Lazada_GENERIC
            ship_address:
              country: Singapore
              state: Singapore
              city: 'Singapore, Singapore'
              phone: '6590547759, 6590547759'
              zip_code: '549751'
              address:
                - '21 DA SILVA LANE,'
                - '549751'
            bill_address:
              country: Singapore
              state: Singapore
              city: 'Singapore, Singapore'
              phone: '6590547759, 6590547759'
              zip_code: '549751'
              address:
                - '21 DA SILVA LANE,'
                - '549751'
            last_import_date: '2019-06-07T20:47:26+00:00'
            customer:
              firstname: Christy Lee
            line_items:
              - id: '9151224432845'
                name: Short sleeve t-shirt
                quantity: 1
                price: 1.51
                sku: '2468'
            integration:
              id: shop_01
              name: Shop-01
              channel: LazadaSG
              authorized: false
              last_import_orders_date: '2019-06-07T20:47:14+00:00'
              created_at: '2019-06-07T00:06:52+00:00'
              updated_at: '2019-06-07T20:47:32+00:00'
          - order_id: '9170283050978'
            number: '9170283050978'
            total_price: '1.00'
            total_quantity: 1
            status: canceled
            payment_method: Lazada_GENERIC
            ship_address:
              country: Singapore
              state: Singapore
              city: 'Singapore, Singapore'
              phone: '6583221206, 6583221206'
              zip_code: '637665'
              address:
                - '98 NANYANG CRESCENT,#06-06'
                - '637665'
            bill_address:
              country: Singapore
              state: Singapore
              city: 'Singapore, Singapore'
              phone: '6583221206, 6583221206'
              zip_code: '637665'
              address:
                - '98 NANYANG CRESCENT,#06-06'
                - '637665'
            last_import_date: '2019-06-07T20:47:27+00:00'
            customer:
              firstname: Aravind Dasari
            line_items:
              - id: '9170283250978'
                name: Actxa Swift / Swift+ Charging Cradle
                quantity: 1
                price: 1
                sku: 0018227994491
            integration:
              id: shop_01
              name: Shop-01
              channel: LazadaSG
              authorized: false
              last_import_orders_date: '2019-06-07T20:47:14+00:00'
              created_at: '2019-06-07T00:06:52+00:00'
              updated_at: '2019-06-07T20:47:32+00:00'
        pagination:
          offset: 0
          limit: 10
          total: 2
    order_response:
      value:
        data:
          order_id: '9151224232845'
          number: '9151224232845'
          total_price: '2.00'
          total_quantity: 1
          status: canceled
          payment_method: Lazada_GENERIC
          ship_address:
            country: Singapore
            state: Singapore
            city: 'Singapore, Singapore'
            phone: '6590547759, 6590547759'
            zip_code: '549751'
            address:
              - '21 DA SILVA LANE,'
              - '549751'
          bill_address:
            country: Singapore
            state: Singapore
            city: 'Singapore, Singapore'
            phone: '6590547759, 6590547759'
            zip_code: '549751'
            address:
              - '21 DA SILVA LANE,'
              - '549751'
          last_import_date: '2019-06-07T20:47:26+00:00'
          customer:
            firstname: Christy Lee
          line_items:
            - id: '9151224432845'
              name: Short sleeve t-shirt
              quantity: 1
              price: 1.51
              sku: '2468'
          integration:
            id: shop_01
            name: Shop-01
            channel: LazadaSG
            authorized: false
            last_import_orders_date: '2019-06-07T20:47:14+00:00'
            created_at: '2019-06-07T00:06:52+00:00'
            updated_at: '2019-06-07T20:47:32+00:00'
    task_response:
      value:
        data:
          id: 5cfe690b25d9854b3b02241b
          status: completed
          progress: 100
          description: Importing last updated orders from 'Shop-01' integration.
          created_at: '2019-06-10T14:28:27+00:00'
          updated_at: '2019-06-10T14:28:43+00:00'
          executions:
            - status: completed
              started_at: '2019-06-10T14:28:27+00:00'
              completed_at: '2019-06-10T14:28:43+00:00'
          notifications:
            - type: info
              message: Imported order 17851977370457 from Shop-01 integration.
            - type: info
              message: Imported order 8834309804556 from Shop-01 integration.
            - type: info
              message: Imported order 16159781406633 from Shop-01 integration.
            - type: info
              message: Importing form 1 to 3.
            - type: info
              message: 'Importing orders updated after ''2019-03-12 14:28:27 UTC'' from Shop-01 integration.'
          scheduler:
            active: true
            start_date: '2019-06-20'
            end_date: '2019-06-21'
            time: '12:0'
            days_of_week:
              - Mon
              - Wed
              - Fri
            weeks_of_month:
              - First
              - Third
              - Last
            months_of_year:
              - Jan
              - Apr
              - Jul
              - Oct
    tasks_response:
      value:
        data:
          - id: 5cfe690b25d9854b3b02241b
            status: completed
            progress: 100
            description: Importing last updated orders from 'Shop-01' integration.
            created_at: '2019-06-10T13:35:27+00:00'
            updated_at: '2019-06-10T13:35:43+00:00'
            executions:
              - status: completed
                started_at: '2019-06-10T13:35:27+00:00'
                completed_at: '2019-06-10T13:35:43+00:00'
            notifications:
              - type: info
                message: Imported order 17851977370457 from Shop-01 integration.
              - type: info
                message: Imported order 8834309804556 from Shop-01 integration.
              - type: info
                message: Imported order 16159781406633 from Shop-01 integration.
              - type: info
                message: Importing form 1 to 3.
              - type: info
                message: 'Importing orders updated after ''2019-03-12 14:28:27 UTC'' from Shop-01 integration.'
            scheduler:
              active: true
              start_date: '2019-06-20'
              end_date: '2019-06-21'
              time: '12:0'
              days_of_week:
                - Mon
                - Wed
                - Fri
              weeks_of_month:
                - First
                - Third
                - Last
              months_of_year:
                - Jan
                - Apr
                - Jul
                - Oct
          - id: 5cfe5ca825d9854aff021043
            status: completed
            progress: 100
            description: Importing last updated orders from 'Shop-01' integration.
            created_at: '2019-06-10T13:35:27+00:00'
            updated_at: '2019-06-10T13:35:43+00:00'
            executions:
              - status: completed
                started_at: '2019-06-10T13:35:27+00:00'
                completed_at: '2019-06-10T13:35:43+00:00'
            notifications:
              - type: info
                message: Imported order 37851977370457 from Shop-01 integration.
              - type: info
                message: Imported order 2834309804556 from Shop-01 integration.
              - type: info
                message: Imported order 36159781406633 from Shop-01 integration.
              - type: info
                message: Importing form 1 to 3.
              - type: info
                message: 'Importing orders updated after ''2019-03-12 14:28:27 UTC'' from Shop-01 integration.'
        pagination:
          offset: 0
          limit: 10
          total: 2
    webhook_item_response:
      value:
        data:
          id: 5d13be7025d9853de90012b6
          topic: orders/registered
          address: 'http://myintegration.com'
          integration:
            id: shop_01
            name: Shop-01
            channel: LazadaSG
            authorized: true
            last_import_orders_date: '2019-06-07T20:47:14+00:00'
            created_at: '2019-06-07T00:06:52+00:00'
            updated_at: '2019-06-07T20:47:32+00:00'
          created_at: '2019-06-18T16:21:46+00:00'
          updated_at: '2019-06-18T16:22:12+00:00'
    webhooks_items_response:
      value:
        data:
          - id: 5d13be7025d9853de90012b6
            topic: orders/registered
            address: 'http://myintegration.com'
            integration:
              id: shop_01
              name: Shop-01
              channel: LazadaSG
              authorized: true
              last_import_orders_date: '2019-06-07T20:47:14+00:00'
              created_at: '2019-06-07T00:06:52+00:00'
              updated_at: '2019-06-07T20:47:32+00:00'
            created_at: '2019-06-18T16:21:46+00:00'
            updated_at: '2019-06-18T16:22:12+00:00'
        pagination:
          offset: 0
          limit: 5
          total: 1
  requestBodies:
    create_flow:
      description: Flow that will be added to the system
      required: true
      content:
        application/json:
          schema:
            properties:
              data:
                $ref: '#/components/schemas/FlowRequestBody'
          examples:
            Ex1:
              $ref: '#/components/examples/flow_create_request_1'
            Ex2:
              $ref: '#/components/examples/flow_create_request_2'
    update_flow:
      description: Flow scheduler that will be updated
      required: true
      content:
        application/json:
          schema:
            properties:
              data:
                type: object
                properties:
                  scheduler:
                    $ref: '#/components/schemas/SchedulerRequestBody'
          examples:
            Ex1:
              $ref: '#/components/examples/flow_update_request'
  securitySchemes:
    HMac:
      type: apiKey
      name: hmac
      in: query
      description: |
        Keyed-Hash message authentication code.

        > Each service request must includes an hmac parameter, which is generated using the tenant's
          key along with service path and the data sent in the request.

        **Example:**

        ```Ruby
        TODO: ...
        ```
    Timestamp:
      description: |
        The time stamp of the request with less than 7200 secounds difference from UTC time.
      type: apiKey
      name: timestamp
      in: query
    Token:
      description: |
        Tenant authentication token.
      type: apiKey
      name: token
      in: query
