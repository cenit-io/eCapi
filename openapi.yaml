openapi: 3.0.0
info:
  version: v1
  title: OMNA Commerce API
  termsOfService: 'https://example.com/terms/'
  contact:
    email: support@cenit.io
    url: 'https://cenitio.slack.com/messages/support'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: 'http://www.omna.io/wp-content/uploads/2019/06/omna_logo-331x100.png'
  description: |
    # Introduction
    * The OMNA Commerce API is built over REST services on HTTPS.
    * It has predictable resource URLs.
    * It returns HTTP response codes to indicate errors.
    * It also accepts and returns JSON in the HTTP body.
    * You can use your favorite HTTP/REST library for your programming language to use OMNA Commerce API,
    # Authentication
    TODO: ...
tags:
  - name: Stores
    description: Operations about stores
  - name: Orders
    description: Operations about orders
  - name: Flows
    description: Operations about flows
  - name: Webhooks
    description: Operations about webhooks
  - name: Tasks
    description: Operations about tasks
servers:
  - url: 'https://cenit.io/app/ecapi'
paths:
  /flows:
    get:
      tags:
        - Flows
      operationId: getFlows
      summary: Get flows
      description: |
        Returns the list of flows settings.
      parameters:
        - $ref: '#/components/parameters/query_filter_term_for_flows'
        - $ref: '#/components/parameters/query_filter_store'
        - $ref: '#/components/parameters/query_filter_flow_type'
        - $ref: '#/components/parameters/query_offset'
        - $ref: '#/components/parameters/query_limit'
      responses:
        '200':
          $ref: '#/components/responses/flow_items'
    post:
      tags:
        - Flows
      operationId: createFlow
      summary: Create flow
      description: |
        Create flow settings from a given name and channel.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    name:
                      description: Flow name
                      type: string
                    channel:
                      description: Channel identifier
                      type: string
            example:
              data:
                store_id: shop_01
                type: import_orders
      responses:
        '200':
          $ref: '#/components/responses/flow_item'
        '400':
          $ref: '#/components/responses/already_exists'
  '/flows/{flow_id}':
    parameters:
      - $ref: '#/components/parameters/path_flow_id'
    get:
      tags:
        - Flows
      operationId: getFlow
      summary: Get flow
      description: |
        Find flow by given id and returns it.
      responses:
        '200':
          $ref: '#/components/responses/flow_item'
        '404':
          $ref: '#/components/responses/flow_not_found'
    delete:
      tags:
        - Flows
      operationId: deleteFlow
      summary: Destroy flow
      description: |
        Find flow by given id and destroy it.
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/flow_not_found'
  '/flows/{flow_id}/destroy':
    parameters:
      - $ref: '#/components/parameters/path_flow_id'
    get:
      tags:
        - Flows
      operationId: destroyFlow
      summary: Destroy flow
      description: |
        Find flow by given id and destroy it.
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/flow_not_found'
  '/flows/{flow_id}/toggle/scheduler/status':
    parameters:
      - $ref: '#/components/parameters/path_flow_id'
    get:
      tags:
        - Flows
      operationId: toggleFlowSchedulerStatus
      summary: Toggle scheduler status
      description: |
        Find flow by given id and activate or deactivate its scheduler.
      responses:
        '200':
          $ref: '#/components/responses/flow_item'
        '404':
          $ref: '#/components/responses/flow_not_found'
  /orders:
    parameters:
      - $ref: '#/components/parameters/query_filter_term_for_orders'
      - $ref: '#/components/parameters/query_filter_store'
      - $ref: '#/components/parameters/query_offset'
      - $ref: '#/components/parameters/query_limit'
    get:
      tags:
        - Orders
      operationId: getOrders
      summary: Get orders
      description: |
        Returns the list of orders.
      responses:
        '200':
          $ref: '#/components/responses/order_items'
  '/orders/{store_id}/{number}':
    parameters:
      - $ref: '#/components/parameters/path_store_id'
      - $ref: '#/components/parameters/path_order_number'
    get:
      deprecated: true
      tags:
        - Orders
      operationId: getOrderDeprecate
      summary: Get order
      description: |
        Find order by given id and returns it.
      responses:
        '200':
          $ref: '#/components/responses/order_item'
        '404':
          $ref: '#/components/responses/order_not_found'
  '/orders/{store_id}/import':
    parameters:
      - $ref: '#/components/parameters/path_store_id'
    get:
      deprecated: true
      tags:
        - Orders
      operationId: importOrdersDeprecate
      summary: Import updated orders
      description: |
        Import the last updated orders from a store
      responses:
        '200':
          $ref: '#/components/responses/task_item'
        '404':
          $ref: '#/components/responses/store_not_found'
  /stores:
    get:
      tags:
        - Stores
      operationId: getStores
      summary: Get stores
      description: |
        Returns the list of stores settings.
      parameters:
        - $ref: '#/components/parameters/query_filter_term_for_stores'
        - $ref: '#/components/parameters/query_filter_store_channel'
        - $ref: '#/components/parameters/query_offset'
        - $ref: '#/components/parameters/query_limit'
      responses:
        '200':
          $ref: '#/components/responses/store_items'
    post:
      tags:
        - Stores
      operationId: createStore
      summary: Create store
      description: |
        Create store settings from a given name and channel.
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  type: object
                  properties:
                    name:
                      description: Store name
                      type: string
                    channel:
                      description: Channel identifier
                      type: string
            examples:
              e1:
                summary: To Lazada store
                value:
                  data:
                    name: Shop-01
                    channel: LazadaSG
              e2:
                summary: To Shopee store
                value:
                  data:
                    name: Shop-02
                    channel: ShopeeSG
      responses:
        '200':
          $ref: '#/components/responses/store_item'
        '400':
          $ref: '#/components/responses/already_exists'
  '/stores/{store_id}':
    parameters:
      - $ref: '#/components/parameters/path_store_id'
    get:
      tags:
        - Stores
      operationId: getStoreSettings
      summary: Get store
      description: |
        Find store settings by given id and returns it.
      responses:
        '200':
          $ref: '#/components/responses/store_item'
        '404':
          $ref: '#/components/responses/store_not_found'
    delete:
      tags:
        - Stores
      operationId: deleteStoreSettings
      summary: Destroy store
      description: |
        Find store settings by given id and destroy it.

        >> Only unauthorize stores can be destroyed.
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/store_not_found'
  '/stores/{store_id}/authorize':
    parameters:
      - $ref: '#/components/parameters/path_store_id'
    get:
      tags:
        - Stores
      operationId: authorizeStoreConnection
      summary: Get store authorization
      description: |
        Find store settings by given id and redirect navigation to authorization uri.
      parameters:
        - name: redirect_uri
          in: query
          schema:
            $ref: '#/components/schemas/RedirectURI'
      responses:
        '404':
          $ref: '#/components/responses/store_not_found'
    delete:
      tags:
        - Stores
      operationId: unauthorizeStoreConnection
      summary: Cancel store authorization
      description: |
        Find store settings by given id and disallow their connection.

        >> Only authorize stores can be unauthorizes.
      responses:
        '404':
          $ref: '#/components/responses/store_not_found'
  '/stores/{store_id}/destroy':
    parameters:
      - $ref: '#/components/parameters/path_store_id'
    get:
      tags:
        - Stores
      operationId: destroyStoreSettings
      summary: Destroy store
      description: |
        Find store settings by given id and destroy it.

        >> Only unauthorize stores can be destroyed.
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/store_not_found'
  '/stores/{store_id}/flows':
    parameters:
      - $ref: '#/components/parameters/path_store_id'
      - $ref: '#/components/parameters/query_filter_term_for_flows'
      - $ref: '#/components/parameters/query_filter_flow_type'
      - $ref: '#/components/parameters/query_offset'
      - $ref: '#/components/parameters/query_limit'
    get:
      tags:
        - Flows
        - Stores
      operationId: getStoreFlows
      summary: Get store flows
      description: |
        Returns the flow list of a specific store.
      responses:
        '200':
          $ref: '#/components/responses/flow_items'
  '/stores/{store_id}/orders':
    parameters:
      - $ref: '#/components/parameters/path_store_id'
      - $ref: '#/components/parameters/query_filter_term_for_orders'
      - $ref: '#/components/parameters/query_offset'
      - $ref: '#/components/parameters/query_limit'
    get:
      tags:
        - Orders
        - Stores
      operationId: getStoreOrders
      summary: Get store orders
      description: |
        Returns the order list of a specific store.
      responses:
        '200':
          $ref: '#/components/responses/order_items'
  '/stores/{store_id}/orders/{number}':
    parameters:
      - $ref: '#/components/parameters/path_store_id'
      - $ref: '#/components/parameters/path_order_number'
    get:
      tags:
        - Orders
      operationId: getOrder
      summary: Get order
      description: |
        Find order by given id and returns it.
      responses:
        '200':
          $ref: '#/components/responses/order_item'
        '404':
          $ref: '#/components/responses/order_not_found'
  '/stores/{store_id}/orders/{number}/doc/{doc_type}':
    parameters:
      - $ref: '#/components/parameters/path_store_id'
      - $ref: '#/components/parameters/path_order_number'
      - $ref: '#/components/parameters/path_doc_type'
    get:
      tags:
        - Orders
      operationId: getOrderDoc
      summary: Get document
      description: |
        Returns a specific document of the order.

        >> To reconstruct the file, the data from the node needs to be base64 decoded, and interpreted according to the mime_type.
      responses:
        '200':
          $ref: '#/components/responses/order_doc'
  '/stores/{store_id}/orders/{number}/doc/types':
    parameters:
      - $ref: '#/components/parameters/path_store_id'
    get:
      tags:
        - Orders
      operationId: getOrderDocTypes
      summary: Get documents types
      description: |
        Return the list of types of order documents
      responses:
        '200':
          $ref: '#/components/responses/order_doc_types'
  '/stores/{store_id}/orders/{number}/import':
    parameters:
      - $ref: '#/components/parameters/path_store_id'
      - $ref: '#/components/parameters/path_order_number'
    get:
      tags:
        - Orders
      operationId: importOrder
      summary: Import a single order
      description: |
        Import a specific order from a store
      responses:
        '200':
          $ref: '#/components/responses/task_item'
        '404':
          $ref: '#/components/responses/store_not_found'
  '/stores/{store_id}/orders/import':
    parameters:
      - $ref: '#/components/parameters/path_store_id'
    get:
      tags:
        - Orders
      operationId: importOrders
      summary: Import updated orders
      description: |
        Import the last updated orders from a store
      responses:
        '200':
          $ref: '#/components/responses/task_item'
        '404':
          $ref: '#/components/responses/store_not_found'
  '/stores/{store_id}/unauthorize':
    parameters:
      - $ref: '#/components/parameters/path_store_id'
    get:
      tags:
        - Stores
      operationId: unauthorizeStoreConnection2
      summary: Cancel store authorization
      description: |
        Find store settings by given id and disallow their connection.

        >> Only authorize stores can be unauthorizes.
      responses:
        '404':
          $ref: '#/components/responses/store_not_found'
  /stores/channels:
    get:
      tags:
        - Stores
      operationId: getStoreChannels
      summary: Get store channels
      description: |
        Returns the list of store channels availables.
      responses:
        '200':
          $ref: '#/components/responses/store_channels'
  /tasks:
    get:
      tags:
        - Tasks
      operationId: getTasks
      summary: Get tasks
      description: |
        Returns the list of tasks executions.
      parameters:
        - $ref: '#/components/parameters/query_filter_term_for_tasks'
        - $ref: '#/components/parameters/query_task_status'
        - $ref: '#/components/parameters/query_offset'
        - $ref: '#/components/parameters/query_limit'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
              example:
                $ref: '#/components/examples/tasks_response'
  '/tasks/{task_id}':
    parameters:
      - $ref: '#/components/parameters/path_task_id'
    get:
      tags:
        - Tasks
      operationId: getTask
      summary: Get task
      description: |
        Find task by given id and returns it.
      responses:
        '200':
          $ref: '#/components/responses/task_item'
        '404':
          $ref: '#/components/responses/task_not_found'
    delete:
      tags:
        - Tasks
      operationId: deleteTask
      summary: Destroy task
      description: |
        Find task by given id and destroy it.

        >> The tasks in running status can't be destroyed.
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/task_not_found'
  '/tasks/{task_id}/destroy':
    parameters:
      - $ref: '#/components/parameters/path_task_id'
    get:
      tags:
        - Tasks
      operationId: destroyTask
      summary: Destroy task
      description: |
        Find task by given id and destroy it.

        >> The tasks in running status can't be destroyed.
      responses:
        '200':
          $ref: '#/components/responses/success'
        '404':
          $ref: '#/components/responses/task_not_found'
components:
  schemas:
    Address:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        country:
          type: string
        state:
          type: string
        city:
          type: string
        district:
          type: string
        town:
          type: string
        phone:
          type: string
        zip_code:
          type: string
        address:
          type: array
          items:
            type: string
    CreatedAt:
      description: Date in iso8601 when the record was created
      type: string
      format: date-time
    Customer:
      type: object
      description: Customer
      properties:
        customer_id:
          type: string
          description: Unique identifier for the customer
        first_name:
          type: string
          description: Customers first name
        last_name:
          type: string
          description: Customers last name
    Execution:
      type: object
      properties:
        status:
          description: Status of task execution
          type: string
        started_at:
          description: Date in iso8601 when the task was started
          type: string
          format: date-time
        completed_at:
          description: Date in iso8601 when the task was completed
          type: string
          format: date-time
    Flow:
      type: object
      properties:
        id:
          description: Flow identifier
          type: string
        type:
          description: Flow type name
          type: string
        title:
          description: The human-readable flow type name
          type: string
        task:
          $ref: '#/components/schemas/Task'
        store:
          $ref: '#/components/schemas/Store'
    LineItem:
      title: LineItem
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        quantity:
          type: integer
        price:
          type: number
        sku:
          type: string
        product_id:
          type: string
    Notification:
      type: object
      properties:
        type:
          description: 'Notification type [info, notice, warning or error]'
          type: string
        message:
          description: Notification message
          type: string
    Order:
      type: object
      properties:
        order_id:
          description: Order identifier
          type: string
        number:
          description: The human-readable order number
          type: string
        total_price:
          description: Total amount for this order
          type: string
        total_quantity:
          description: Number of items in order
          type: integer
        status:
          description: Order status
          type: string
        payment_method:
          description: The method of the payment
          type: string
        ship_address:
          description: Shipping address
          allOf:
            - $ref: '#/components/schemas/Address'
        bill_address:
          description: Billing address
          allOf:
            - $ref: '#/components/schemas/Address'
        line_items:
          description: Order items
          type: array
          items:
            $ref: '#/components/schemas/LineItem'
        created_date:
          description: Date in iso8601 when the order was created
          type: string
          format: date-time
        updated_date:
          description: Date in iso8601 when the order was updated
          type: string
          format: date-time
        last_import_date:
          description: Date in iso8601 when the order was imported
          type: string
          format: date-time
        customer:
          $ref: '#/components/schemas/Customer'
        store:
          $ref: '#/components/schemas/Store'
    OrderDocument:
      type: object
      properties:
        file:
          description: File content in base64 encoded
          type: string
        mime_type:
          description: Mime type
          type: string
        document_type:
          description: Type of document
          type: string
    OrderDocumentType:
      type: object
      properties:
        type:
          description: Document type identifier
          type: string
        name:
          description: Nombre legible del tipo de documento
          type: string
    Pagination:
      type: object
      properties:
        offset:
          description: Offset
          type: integer
        limit:
          description: Limit
          type: integer
        total:
          description: Limit
          type: integer
    RedirectURI:
      description: URI to back after do authorization
      type: string
    Scheduler:
      type: object
      description: Scheduler settings
      properties:
        active:
          description: Scheduler status
          type: boolean
        start_date:
          description: Date from which the task will begin executing
          type: string
          format: date
        end_date:
          description: Date from which the task will be stopped executing
          type: string
          format: date
        time:
          description: Hour and minute in which the task will be executed
          type: string
          format: time
        days_of_week:
          description: Days of the week in which the task will be executed
          type: array
          items:
            type: string
        weeks_of_month:
          description: Weeks of the month in which the task will be executed
          type: array
          items:
            type: string
        months_of_year:
          description: Months of the year in which the task will be executed
          type: array
          items:
            type: string
    Store:
      type: object
      description: Store settings
      properties:
        id:
          description: Store identifier
          type: string
        name:
          description: Store name
          type: string
        channel:
          description: Channel identifier
          type: string
        authorized:
          description: If store is authorized or not
          type: boolean
        last_import_orders_date:
          description: The last import orders date
          type: string
          format: date-time
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      required:
        - name
        - channel
    StoreChannel:
      type: object
      properties:
        name:
          description: Channel identifier
          type: string
        title:
          description: Channel identifier
          type: string
    Success:
      type: object
      properties:
        success:
          description: Success status
          type: boolean
        message:
          description: Error or Success message
          type: string
    Task:
      type: object
      properties:
        id:
          description: Task identifier
          type: string
        status:
          description: Task execution status
          type: string
        progress:
          description: Task execution progress
          type: integer
        description:
          description: Task execution description
          type: string
        executions:
          description: Dates that started and completed each instance of execution of the task
          type: array
          items:
            $ref: '#/components/schemas/Execution'
        notifications:
          description: Notifications of tasks
          type: array
          items:
            $ref: '#/components/schemas/Notification'
        scheduler:
          $ref: '#/components/schemas/Scheduler'
        created_at:
          $ref: '#/components/schemas/CreatedAt'
        updated_at:
          $ref: '#/components/schemas/UpdatedAt'
      required:
        - name
        - channel
    UpdatedAt:
      description: Date in iso8601 when the record was updated
      type: string
      format: date-time
  responses:
    already_exists:
      description: Already exist
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: false
            message: Already exist
    flow_item:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Flow'
          example:
            $ref: '#/components/examples/flow_item_response'
    flow_items:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Flow'
              pagination:
                $ref: '#/components/schemas/Pagination'
          example:
            $ref: '#/components/examples/flow_items_response'
    flow_not_found:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: false
            message: 'Not found flow with id: 5d04051125d9852c71016793'
    order_doc_types:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/OrderDocumentType'
          example:
            $ref: '#/components/examples/order_doc_types_response'
    order_doc:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/OrderDocument'
          example:
            $ref: '#/components/examples/order_doc_response'
    order_item:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Order'
          example:
            $ref: '#/components/examples/order_response'
    order_items:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
              pagination:
                $ref: '#/components/schemas/Pagination'
          example:
            $ref: '#/components/examples/order_items_response'
    order_not_found:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: false
            message: 'Not found order with number: 9151224232846'
    store_channels:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/StoreChannel'
              pagination:
                $ref: '#/components/schemas/Pagination'
          example:
            $ref: '#/components/examples/store_channels_response'
    store_item:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Store'
          example:
            $ref: '#/components/examples/store_item_response'
    store_items:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Store'
              pagination:
                $ref: '#/components/schemas/Pagination'
          example:
            $ref: '#/components/examples/store_items_response'
    store_not_found:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: false
            message: 'Not found store with id: shop_20'
    success:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: true
    task_item:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Task'
          example:
            $ref: '#/components/examples/task_response'
    task_not_found:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success'
          example:
            success: false
            message: 'Not found task with id: 1234567890'
  parameters:
    path_doc_type:
      name: doc_type
      in: path
      schema:
        description: Document type
        type: string
        example: invoice
    path_flow_id:
      name: flow_id
      in: path
      schema:
        description: Flow identifier
        type: string
        example: 5d04051125d9852c71016793
    path_order_number:
      name: number
      in: path
      schema:
        description: Order number
        type: string
        example: 9170283050978
    path_store_id:
      name: store_id
      in: path
      schema:
        description: Store identifier
        type: string
        example: shop_01
    path_task_id:
      name: task_id
      in: path
      schema:
        description: Task identifier
        type: string
        example: 5d029d6625d985755e02202c
    query_filter_flow_type:
      name: type
      in: query
      schema:
        description: Allow to filter the items by flow type.
        type: string
        example: import_orders
    query_filter_store_channel:
      name: channel
      in: query
      schema:
        description: Allow to filter the items by store channel.
        type: string
        example: LazadaSG
    query_filter_store:
      name: store_id
      in: query
      schema:
        description: Allow to filter the items by store.
        type: string
        example: shop_01
    query_filter_term_for_flows:
      name: term
      in: query
      schema:
        description: Allow to filter the flows that contain the value of the term in their ***type***.
        type: string
        example: Shop-Lazada
    query_filter_term_for_orders:
      name: term
      in: query
      schema:
        description: Allow to filter the orders that contain the value of the term in their ***number*** or ***status***.
        type: string
        example: pending
    query_filter_term_for_stores:
      name: term
      in: query
      schema:
        description: Allow to filter the stores settings that contain the value of the term in their ***name***.
        type: string
        example: Shop-Lazada
    query_filter_term_for_tasks:
      name: term
      in: query
      schema:
        description: Allow to filter the tasks that contain the value of the term in their ***status*** or ***description***.
        type: string
        example: Shop-Lazada
    query_limit:
      name: limit
      in: query
      schema:
        description: The maximum number of items that can be returned. The supported values ​​are between 10 and 100.
        type: integer
        example: 10
    query_offset:
      name: offset
      in: query
      schema:
        description: Number of items to skip at the beginning of the list.
        type: integer
        example: 10
    query_task_status:
      name: status
      in: query
      schema:
        description: Allow to filter the tasks by ***status***.
        type: string
        example: 5d029d6625d985755e02202c
  examples:
    flow_item_response:
      data:
        id: 5d04051125d9852c71016793
        type: import_orders
        title: Import orders from store
        created_at: '2019-06-07T00:06:52+00:00'
        updated_at: '2019-06-07T20:47:32+00:00'
        store:
          id: shop_01
          name: Shop-01
          channel: LazadaSG
          authorized: true
          last_import_orders_date: '2019-06-07T20:47:14+00:00'
          created_at: '2019-06-07T00:06:52+00:00'
          updated_at: '2019-06-07T20:47:32+00:00'
        task:
          id: 5cfe690b25d9854b3b02241b
          status: completed
          progress: 100
          description: Importing last updated orders from 'Shop-01' store.
          created_at: '2019-06-10T14:28:27+00:00'
          updated_at: '2019-06-10T14:28:43+00:00'
          executions:
            - status: completed
              started_at: '2019-06-10T14:28:27+00:00'
              completed_at: '2019-06-10T14:28:43+00:00'
          notifications:
            - type: info
              message: Imported order 17851977370457 from Shop-01 store.
            - type: info
              message: Imported order 8834309804556 from Shop-01 store.
            - type: info
              message: Imported order 16159781406633 from Shop-01 store.
            - type: info
              message: Importing form 1 to 3.
            - type: info
              message: 'Importing orders updated after ''2019-03-12 14:28:27 UTC'' from Shop-01 store.'
          scheduler:
            active: true
            start_date: '2019-06-20'
            end_date: '2019-06-21'
            time: '12:0'
            days_of_week:
              - Mon
              - Wed
              - Fri
            weeks_of_month:
              - First
              - Third
              - Last
            months_of_year:
              - Jan
              - Apr
              - Jul
              - Oct
    flow_items_response:
      data:
        - id: 5d04051125d9852c71016793
          type: import_orders
          title: Import orders from store
          created_at: '2019-06-07T00:06:52+00:00'
          updated_at: '2019-06-07T20:47:32+00:00'
          store:
            id: shop_01
            name: Shop-01
            channel: LazadaSG
            authorized: true
            last_import_orders_date: '2019-06-07T20:47:14+00:00'
            created_at: '2019-06-07T00:06:52+00:00'
            updated_at: '2019-06-07T20:47:32+00:00'
          task:
            id: 5cfe690b25d9854b3b02241b
            status: completed
            progress: 100
            description: Importing last updated orders from 'Shop-01' store.
            created_at: '2019-06-10T14:28:27+00:00'
            updated_at: '2019-06-10T14:28:43+00:00'
            executions:
              - status: completed
                started_at: '2019-06-10T14:28:27+00:00'
                completed_at: '2019-06-10T14:28:43+00:00'
            notifications:
              - type: info
                message: Imported order 17851977370457 from Shop-01 store.
              - type: info
                message: Imported order 8834309804556 from Shop-01 store.
              - type: info
                message: Imported order 16159781406633 from Shop-01 store.
              - type: info
                message: Importing form 1 to 3.
              - type: info
                message: 'Importing orders updated after ''2019-03-12 14:28:27 UTC'' from Shop-01 store.'
            scheduler:
              active: true
              start_date: '2019-06-20'
              end_date: '2019-06-21'
              time: '12:0'
              days_of_week:
                - Mon
                - Wed
                - Fri
              weeks_of_month:
                - First
                - Third
                - Last
              months_of_year:
                - Jan
                - Apr
                - Jul
                - Oct
      pagination:
        offset: 0
        limit: 10
        total: 1
    order_doc_response:
      data:
        file: T3JkZXIgZG9jdWVtbnQgZXhhbXBsZS4uLgo=
        mime_type: text/html
        document_type: invoice
    order_doc_types_response:
      data:
        - type: invoice
          title: Invoice
        - type: shippingLabel
          title: Shipping Label
        - type: carrierManifest
          title: Carrier Manifest
    order_items_response:
      data:
        - order_id: '9151224232845'
          number: '9151224232845'
          total_price: '2.00'
          total_quantity: 1
          status: canceled
          payment_method: Lazada_GENERIC
          ship_address:
            country: Singapore
            state: Singapore
            city: 'Singapore, Singapore'
            phone: '6590547759, 6590547759'
            zip_code: '549751'
            address:
              - '21 DA SILVA LANE,'
              - '549751'
          bill_address:
            country: Singapore
            state: Singapore
            city: 'Singapore, Singapore'
            phone: '6590547759, 6590547759'
            zip_code: '549751'
            address:
              - '21 DA SILVA LANE,'
              - '549751'
          last_import_date: '2019-06-07T20:47:26+00:00'
          customer:
            firstname: Christy Lee
          line_items:
            - id: '9151224432845'
              name: Short sleeve t-shirt
              quantity: 1
              price: 1.51
              sku: '2468'
          store:
            id: shop_01
            name: Shop-01
            channel: LazadaSG
            authorized: false
            last_import_orders_date: '2019-06-07T20:47:14+00:00'
            created_at: '2019-06-07T00:06:52+00:00'
            updated_at: '2019-06-07T20:47:32+00:00'
        - order_id: '9170283050978'
          number: '9170283050978'
          total_price: '1.00'
          total_quantity: 1
          status: canceled
          payment_method: Lazada_GENERIC
          ship_address:
            country: Singapore
            state: Singapore
            city: 'Singapore, Singapore'
            phone: '6583221206, 6583221206'
            zip_code: '637665'
            address:
              - '98 NANYANG CRESCENT,#06-06'
              - '637665'
          bill_address:
            country: Singapore
            state: Singapore
            city: 'Singapore, Singapore'
            phone: '6583221206, 6583221206'
            zip_code: '637665'
            address:
              - '98 NANYANG CRESCENT,#06-06'
              - '637665'
          last_import_date: '2019-06-07T20:47:27+00:00'
          customer:
            firstname: Aravind Dasari
          line_items:
            - id: '9170283250978'
              name: Actxa Swift / Swift+ Charging Cradle
              quantity: 1
              price: 1
              sku: 0018227994491
          store:
            id: shop_01
            name: Shop-01
            channel: LazadaSG
            authorized: false
            last_import_orders_date: '2019-06-07T20:47:14+00:00'
            created_at: '2019-06-07T00:06:52+00:00'
            updated_at: '2019-06-07T20:47:32+00:00'
      pagination:
        offset: 0
        limit: 10
        total: 2
    order_response:
      data:
        order_id: '9151224232845'
        number: '9151224232845'
        total_price: '2.00'
        total_quantity: 1
        status: canceled
        payment_method: Lazada_GENERIC
        ship_address:
          country: Singapore
          state: Singapore
          city: 'Singapore, Singapore'
          phone: '6590547759, 6590547759'
          zip_code: '549751'
          address:
            - '21 DA SILVA LANE,'
            - '549751'
        bill_address:
          country: Singapore
          state: Singapore
          city: 'Singapore, Singapore'
          phone: '6590547759, 6590547759'
          zip_code: '549751'
          address:
            - '21 DA SILVA LANE,'
            - '549751'
        last_import_date: '2019-06-07T20:47:26+00:00'
        customer:
          firstname: Christy Lee
        line_items:
          - id: '9151224432845'
            name: Short sleeve t-shirt
            quantity: 1
            price: 1.51
            sku: '2468'
        store:
          id: shop_01
          name: Shop-01
          channel: LazadaSG
          authorized: false
          last_import_orders_date: '2019-06-07T20:47:14+00:00'
          created_at: '2019-06-07T00:06:52+00:00'
          updated_at: '2019-06-07T20:47:32+00:00'
    store_channels_response:
      data:
        - name: LazadaID
          title: Lazada Indonesia
        - name: LazadaMY
          title: Lazada Malaysia
        - name: ShopeeTH
          title: Shopee Thailand
        - name: ShopeeVN
          title: Shopee Vietnam
    store_item_response:
      data:
        id: shop_01
        name: Shop-01
        channel: LazadaSG
        authorized: true
        last_import_orders_date: '2019-06-07T20:47:14+00:00'
        created_at: '2019-06-07T00:06:52+00:00'
        updated_at: '2019-06-07T20:47:32+00:00'
    store_items_response:
      data:
        - id: shop_01
          name: Shop-01
          channel: LazadaSG
          authorized: true
          last_import_orders_date: '2019-06-07T20:47:14+00:00'
          created_at: '2019-06-07T00:06:52+00:00'
          updated_at: '2019-06-07T20:47:32+00:00'
        - id: shop_02
          name: Shop-02
          channel: LazadaMY
          authorized: true
          last_import_orders_date: '2019-07-07T20:47:14+00:00'
          created_at: '2019-07-07T00:06:52+00:00'
          updated_at: '2019-07-07T20:47:32+00:00'
      pagination:
        offset: 0
        limit: 10
        total: 2
    task_response:
      data:
        id: 5cfe690b25d9854b3b02241b
        status: completed
        progress: 100
        description: Importing last updated orders from 'Shop-01' store.
        created_at: '2019-06-10T14:28:27+00:00'
        updated_at: '2019-06-10T14:28:43+00:00'
        executions:
          - status: completed
            started_at: '2019-06-10T14:28:27+00:00'
            completed_at: '2019-06-10T14:28:43+00:00'
        notifications:
          - type: info
            message: Imported order 17851977370457 from Shop-01 store.
          - type: info
            message: Imported order 8834309804556 from Shop-01 store.
          - type: info
            message: Imported order 16159781406633 from Shop-01 store.
          - type: info
            message: Importing form 1 to 3.
          - type: info
            message: 'Importing orders updated after ''2019-03-12 14:28:27 UTC'' from Shop-01 store.'
        scheduler:
          active: true
          start_date: '2019-06-20'
          end_date: '2019-06-21'
          time: '12:0'
          days_of_week:
            - Mon
            - Wed
            - Fri
          weeks_of_month:
            - First
            - Third
            - Last
          months_of_year:
            - Jan
            - Apr
            - Jul
            - Oct
    tasks_response:
      data:
        - id: 5cfe690b25d9854b3b02241b
          status: completed
          progress: 100
          description: Importing last updated orders from 'Shop-01' store.
          created_at: '2019-06-10T13:35:27+00:00'
          updated_at: '2019-06-10T13:35:43+00:00'
          executions:
            - status: completed
              started_at: '2019-06-10T13:35:27+00:00'
              completed_at: '2019-06-10T13:35:43+00:00'
          notifications:
            - type: info
              message: Imported order 17851977370457 from Shop-01 store.
            - type: info
              message: Imported order 8834309804556 from Shop-01 store.
            - type: info
              message: Imported order 16159781406633 from Shop-01 store.
            - type: info
              message: Importing form 1 to 3.
            - type: info
              message: 'Importing orders updated after ''2019-03-12 14:28:27 UTC'' from Shop-01 store.'
          scheduler:
            active: true
            start_date: '2019-06-20'
            end_date: '2019-06-21'
            time: '12:0'
            days_of_week:
              - Mon
              - Wed
              - Fri
            weeks_of_month:
              - First
              - Third
              - Last
            months_of_year:
              - Jan
              - Apr
              - Jul
              - Oct
        - id: 5cfe5ca825d9854aff021043
          status: completed
          progress: 100
          description: Importing last updated orders from 'Shop-01' store.
          created_at: '2019-06-10T13:35:27+00:00'
          updated_at: '2019-06-10T13:35:43+00:00'
          executions:
            - status: completed
              started_at: '2019-06-10T13:35:27+00:00'
              completed_at: '2019-06-10T13:35:43+00:00'
          notifications:
            - type: info
              message: Imported order 37851977370457 from Shop-01 store.
            - type: info
              message: Imported order 2834309804556 from Shop-01 store.
            - type: info
              message: Imported order 36159781406633 from Shop-01 store.
            - type: info
              message: Importing form 1 to 3.
            - type: info
              message: 'Importing orders updated after ''2019-03-12 14:28:27 UTC'' from Shop-01 store.'
      pagination:
        offset: 0
        limit: 10
        total: 2
  headers: {}
