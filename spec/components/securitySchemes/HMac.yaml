type: apiKey
name: hmac
in: query
description: |
  Keyed-Hash message authentication code.

  > Each service request must include an hmac parameter, which is generated using the tenant's
    secret along with service path and the data sent in the request.

  ### Examples:

  #### JavaScript
  ```JavaScript
    const current_tenant = { token: '....', secret: '...' };

    axios.defaults.baseURL = 'https://cenit.io/app/ecapi-v1/';
    axios.defaults.headers.post['Content-Type'] = 'application/json';
    axios.defaults.headers.put['Content-Type'] = 'application/json';

    // Interceptors to sign any request.
    axios.interceptors.request.use((config) => {
      let msg, queryString, body;

      // Add token and timestamp to URL parameters.
      config.params = Object.assign({}, config.params, { token: current_tenant.token, timestamp: Date.now() });

      queryString = qs.stringify(config.params);
      body = config.data ? JSON.stringify(config.data) : '';

      // Join the service path, queryString and body
      msg = config.url + queryString + body;

      // Generate the corresponding hmac header using the js-sha256 or similar library.
      config.headers.common['X-OMNA-HMac'] = sha256.hmac.update(current_tenant.secret, msg).hex();

      return config;
    });
  ```