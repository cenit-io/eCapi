openapi: 3.0.0
info:
  version: v1
  title: Edge-Connection-API
  termsOfService: 'https://cenit.io/terms'
  contact:
    email: support@cenit.io
    url: 'https://cenitio.slack.com/messages/support'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: logo.png
  description: |
    # Introduction

    The CenitIO Edge-Connection-API is a simple connector API to integrate foreings platforms, such us
    marketplaces and ecommerce platforms.

    An easy way to consolidate orders, synchronize inventory and listing product information to commerce solutions.

    The list of available integrations include: Amazon Marketplace, Backmarket, Mercado Libre, Lazada, Qoo10, Shopee, Shopify.

    These integrations are related with 34 Countries: Argentina, Australia, Bolivia, Brasil, Canada, Chile, Colombia, Costa Rica, Dominicana, Ecuador, France, Germany, Guatemala, Honduras, India, Indonesia, Indonesia, Japan, Malaysia, Mexico, Nicaragua, Panama, Paraguay, Peru, Philippines, Salvador, Singapore, Spain, Thailand, Turkey, United Kingdom, Unit Arab Emirates, Uruguay, United States, Venezuela, Vietnam.

    It is built on top of an integration platform https://cenit.io

    This API is for individual retailers, SaaS services, or any business that needs to handle multiple commerce integrations.

    * It is built over REST services on HTTPS.

    * It has predictable resource URLs.

    * It returns HTTP response codes to indicate errors.

    * It accepts and returns JSON in the HTTP body.

    * You can use your favorite HTTP/REST library for your programming language to use CenitIO Edge-Connection-API.

      [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/eb5947e10923dee87507)

tags:
  - name: Available Integrations
    description: |
      This term refers to the set of resources and services that can be included in CenitIO eCommerce for the expansion of
      its scope and integration with other platforms.

      ### Available Integrations:

      - **Integration-Core**: It is the main collection and the basis for working at CenitIO eCommerce LTD.
      - **Integration-Lazada**: It includes support for the integration of CenitIO eCommerce with Lazada's marketplaces.
      - **Integration-Shopee**: It includes support for the integration of CenitIO eCommerce with Shopee's marketplaces.
      - **Integration-Shopify**: It includes support for the integration of CenitIO eCommerce with Shopify's marketplaces.

      ### Future Integrations:

      - **Integration-Qoo10**: It includes support for the integration of CenitIO eCommerce with Qoo10's marketplaces.
      - **Integration-AmazonMWS**: It includes support for the integration of CenitIO eCommerce with AmazonMWS's marketplaces.
      - **Integration-MercadoLible**: It includes support for the integration of CenitIO eCommerce with MercadoLible's marketplaces.
      - **Integration-Backmarket**: It includes support for the integration of CenitIO eCommerce with Backmarket's marketplaces.
      - **Integration-Shipstation**: It includes support for the integration of CenitIO eCommerce with Shipstation's shipping platform for ecommerce fulfillment.

  - name: Connected Integrations
    description: |
      This term refers to the configuration of a connection that will allow access to the set of resources and services
      through integration with other foreign platforms.

  - name: Plans & Subscriptions
    description: |
      Operations on the plans and subscriptions.

  - name: Orders
    description: |
      Operations on the orders

  - name: Orders of an Integration
    description: |
      Operations on the orders of an Integration.

  - name: Statuses
    description: |
      Operations on the order statuses of an Integration.

  - name: Products
    description: |
      Operations on the products.

  - name: Products of an Integration
    description: |
      Operations on the products of an Integration.

  - name: Variants
    description: |
      Operations on the product variants.

  - name: Variants of an Integration
    description: |
      Operations on the product variants of an Integration.

  - name: Categories
    description: |
      Operations on the product categories of an Integration.

  - name: Brands
    description: |
      Operations on the product brands of an Integration.

  - name: Logistics
    description: |
      Operations on the product logistics of a Shopee Integration.

  - name: Stock Locations
    description: |
      Operations on the stock locations.

  - name: Stock Locations of an Integration
    description: |
      Operations on the stock locations of an Integration.

  - name: Stock Items
    description: |
      Operations on the stock items.

  - name: Flows
    description: |
      Operations on the flows.

      The flows allow the user to configure a set of predetermined tasks to run on an integration. These tasks can be
      executed manually or automated through the configuration and activation of their schedulers. For example,
      the user might want to receive products from an integration 1 and orders form another integration.

  - name: Tasks
    description: |
      Each of the actions that make up the api generate one or more tasks when they are process. In the details of the task
      we can find information about the processing triggered by the action like status, fulfillment %, notifications, etc.

  - name: Webhooks
    description: |
      A webhook is a hook through which a notification is sent to a URL of the user's choice when a certain event occurs.
      They allow to receive real-time HTTP notifications of changes to specific objects. Webhooks facilitate syncing
      and relaying data between two endpoints.

      ### Anatomy of a webhook

      After you configure a webhook subscription, the events that you specified will trigger a webhook notification
      each time they occur. This notification contains a JSON payload and and HTTP headers that provide context.
      For example, the order/updated webhook includes the following headers:

      - **X-Tenant-Token**: 5cfe690b25d9854b3b02241b,
      - **X-Topic**: order/updated,
      - **X-API-Version**: v1
      - **X-HMac-Sha256**: d24c9128362b0518f9ca2bf767b4a60a59aefe0f63ebeb7d47ec594442fc7a8f

      Some HTTP headers are particularly useful for your app:

      - **X-Topic** represents the type of object and the event that occurred.
      - **X-HMac-Sha256** and **X-Tenant-Token** are used to verify webhooks.
      - **X-API-Version** is used to confirm what version of the API used to serialize the webhook event payload.

      ### Verifying webhooks

      Webhooks created through the API are verified by calculating a digital signature. Each webhook request includes
      **X-HMac-Sha256** header, which is generated using the tenant shared secret along with the data sent in the request.

      To verify that the request came from CenitIO eCommerce, compute the **HMAC** digest according to the following algorithm and
      compare it to the value in the **X-HMac-Sha256** header. If they match, then you can be sure that the webhook was
      sent from CenitIO eCommerce.

      **The following Ruby example apply to Sinatra or RoR web frameworks to verify a webhook request:**

      ```Ruby
        require 'openssl'

        request.body.rewind
        body = request.body.read

        secret = '...' # Get this from tenant with equal to **X-Tenant-Token** header.

        hmac1 = request.headers['X-HMac-Sha256']
        hmac2 = OpenSSL::HMAC.hexdigest('sha256', secret, body)

        raise 'The request is not valid...' if hmac1 != hmac2
      ```

  - name: Users
    description: |
      A user represents a person or a company, it is a user in Cenit System.

servers:
  - url: 'https://cenit.io/app/ecapi-v1'

security:
  - OAuth1: []
  - Timestamp: []
    Token: []
    HMac: []

x-tagGroups:
  - name: Integrations
    tags:
      - Available Integrations
      - Connected Integrations
      - Plans & Subscriptions

  - name: Orders
    tags:
      - Orders
      - Orders of an Integration
      - Statuses

  - name: Products
    tags:
      - Products
      - Products of an Integration
      - Variants
      - Variants of an Integration
      - Categories
      - Brands
      - Logistics

  - name: Inventories
    tags:
      - Stock Locations
      - Stock Locations of an Integration
      - Stock Items

  - name: Workflows
    tags:
      - Flows
      - Tasks
      - Webhooks

  - name: Security
    tags:
      - Users

paths:

externalDocs:
  description: Guides & Utilities
  url: /